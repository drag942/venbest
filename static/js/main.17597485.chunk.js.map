{"version":3,"sources":["redux/appReducer.ts","App.tsx","api/api.ts","redux/appSelectors.ts","redux/store.ts","index.tsx"],"names":["initialState","users","filteredUsers","SET_USERS","appReducer","state","action","type","payload","filteredValues","filter","user","key","hasOwnProperty","toLowerCase","includes","trim","name","lastname","age","sex","m","f","App","dispatch","useDispatch","useState","setFilter","useEffect","a","axios","get","then","response","data","request","console","log","useSelector","getFilteredUsersSelector","className","onChange","e","target","value","checked","map","index","gender","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17597485.chunk.js","sourcesContent":["import {Dispatch} from \"redux\";\r\nimport {getUsers} from \"../api/api\";\r\n\r\nconst initialState = {\r\n    users: [],\r\n    filteredUsers: [],\r\n};\r\n\r\nconst SET_USERS = 'appReducer/SET_USERS';\r\nconst FILTER_USERS = 'appReducer/FILTER_USERS';\r\n\r\n\r\nconst appReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n                filteredUsers: action.payload\r\n            }\r\n        }\r\n        case FILTER_USERS: {\r\n            const filteredValues = state.users.filter((user:any) => {\r\n                for (let key in action.payload){\r\n                    if (action.payload.hasOwnProperty(key) && action.payload[key] !== ''){\r\n                        let filter;\r\n                        switch (key) {\r\n                            case 'age': {\r\n                                filter = user[key] !== +action.payload[key];\r\n                                break;\r\n                            }\r\n                            case 'sex': {\r\n                                filter = !(action.payload[key][user[key]]);\r\n                                break;\r\n                            }\r\n                            default: {\r\n                                filter = !user[key].toLowerCase().includes(action.payload[key].toLowerCase().trim());\r\n                            }\r\n                        }\r\n                        if(filter){\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if(action.payload.name || action.payload.lastname || action.payload.age || !action.payload.sex.m || !action.payload.sex.f) {\r\n                state.filteredUsers = filteredValues;\r\n            } else {\r\n                state.filteredUsers = state.users;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                filteredUsers: state.filteredUsers\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nconst setUsers = (payload: []) => ({\r\n    type: SET_USERS,\r\n    payload,\r\n});\r\n\r\nexport const filterUsers = (payload: {name?: string, lastname?: string}) => ({\r\n    type: FILTER_USERS,\r\n    payload,\r\n});\r\n\r\n\r\n\r\nexport const getUsersAsyncAction = () => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            const request = await getUsers();\r\n            dispatch(setUsers(request))\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default appReducer;\r\n","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {filterUsers, getUsersAsyncAction} from \"./redux/appReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getFilteredUsersSelector} from \"./redux/appSelectors\";\n\nconst App = () => {\n\n      const dispatch = useDispatch();\n\n      const [filter, setFilter] = useState<{name?: string, lastname?: string, age?: string, sex: {m: boolean, f: boolean}}>({sex: {m: true, f: true}});\n\n      useEffect(() => {\n          dispatch(getUsersAsyncAction());\n      },[dispatch]);\n\n      useEffect(() => {\n          dispatch(filterUsers(filter))\n      }, [dispatch,filter]);\n\n      const filteredUsers  = useSelector(state => getFilteredUsersSelector(state));\n\n      const onChangeName = (e:React.ChangeEvent<HTMLInputElement>) => {\n          setFilter({...filter, name: e.target.value});\n      };\n\n      const onChangeLastName = (e:React.ChangeEvent<HTMLInputElement>) => {\n          setFilter({...filter, lastname: e.target.value});\n      };\n\n      const onChangeAge = (e:React.ChangeEvent<HTMLInputElement>) => {\n          setFilter({...filter, age: e.target.value});\n      };\n\n      const onChangeMale = (e:React.ChangeEvent<HTMLInputElement>) => {\n          setFilter({...filter, sex: {...filter.sex , m: e.target.checked}});\n      };\n\n      const onChangeFemale = (e:React.ChangeEvent<HTMLInputElement>) => {\n          setFilter({...filter, sex: {...filter.sex , f: e.target.checked}});\n      };\n\n      return (\n        <div className={'App'}>\n            <div className={'wrapper'}>\n                <div className={'filter'}>\n                    <p>Фильтры</p>\n                    <div className={'inputContainer'}>\n                        <label>\n                            Имя\n                            <input onChange={onChangeName}/>\n                        </label>\n                    </div>\n                    <div className={'inputContainer'}>\n                        <label>\n                            Фамилия\n                            <input onChange={onChangeLastName}/>\n                        </label>\n                    </div>\n                    <div className={'inputContainer'}>\n                        <label>\n                            Возраст\n                            <input onChange={onChangeAge}/>\n                        </label>\n                    </div>\n                    <div className={'checkBoxContainer'}>\n                        <span>Пол</span>\n                        <label>\n                            <input onChange={onChangeMale} name={'male'} type={'checkbox'} checked={filter.sex.m}/>\n                            <span>м</span>\n                        </label>\n                        <label>\n                            <input onChange={onChangeFemale} name={'female'} type={'checkbox'} checked = {filter.sex.f}/>\n                            <span>ж</span>\n                        </label>\n                    </div>\n                </div>\n                <div className={'users'}>\n                    {filteredUsers.map((user:any, index: number) => {\n                        const gender = user.sex === 'm' ? 'Мужской' : 'Женский';\n                        return <div key={index} className={'user'}>\n                            <div className={'userName'}>\n                                <div>{user.name} </div>\n                                <div className={'userLastName'}>{user.lastname}</div>\n                            </div>\n                            <div>Возраст: {user.age}</div>\n                            <div>Пол: {gender}</div>\n                        </div>\n                    })}\n                </div>\n            </div>\n        </div>\n  );\n};\n\nexport default App;\n","import axios from 'axios'\r\n\r\n\r\nexport const getUsers = () => {\r\n    return axios.get('https://venbest-test.herokuapp.com/').then((response: { data: []; }) => response.data);\r\n};","export const getFilteredUsersSelector = (state:any) => {\r\n    return state.appReducer.filteredUsers;\r\n};\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    appReducer\r\n});\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}